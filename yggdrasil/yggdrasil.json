{
  "date": {
    "description": "logs indexed by date",
    "children": {
      "20181202": {
        "description": "Beginning deployment",
        "children": {
          "checklist": {
            "description": "Wotan deployment and Jormungand release",
            "children": {
              "url": "https://www.digitalocean.com/community/tutorials/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04",
              "configure nginx": {
                "description": "Store all configuration files in Yggdrasil",
                "children": {
                  "install": "sudo apt-get install nginx",
                  "allow port 8000 for testing": "sudo ufw allow 8000",
                  "config file": "nginx/wotan",
                  "copy configuration": "sudo cp yggdrasil/nginx/wotan /etc/nginx/sites-available/",
                  "link": "sudo ln -s /etc/nginx/sites-available/wotan /etc/nginx/sites-enabled",
                  "test nginx": "sudo nginx -t",
                  "restart": "sudo systemctl restart nginx"
                }
              },
              "configure gunicorn": {
                "description": "The gunicorn server sits between nginx and django",
                "children": {
                  "activate virtualenv": "source bin/activate",
                  "install": "pip install gunicorn",
                  "test server": "gunicorn --bind 0.0.0.0:8000 woot.wsgi",
                  "config file": "systemd/gunicorn.service",
                  "copy configuration": "sudo cp yggdrasil/systemd/gunicorn.service /etc/systemd/system/",
                  "start": "sudo systemctl start gunicorn",
                  "enable": "sudo systemctl enable gunicorn",
                  "status": "sudo systemctl status gunicorn",
                  "reread daemon config": "sudo systemctl daemon-reload",
                  "restart": "sudo systemctl restart gunicorn",
                  "single redis process": "https://stackoverflow.com/questions/16053364/make-sure-only-one-worker-launches-the-apscheduler-event-in-a-pyramid-web-app-ru",
                  "redis problem": "When running the app with gunicorn, there is no RUN_MAIN flag in the environ dictionary. For the staging settings, a solution will have to be found for accessing the shell, etc. I don't want to start another instance of the scheduler. Solved by adding SHELL environment variable."
                }
              },
              "add address": {},
              "write Jormungand readme": "",
              "write Jormungand download page": "",
            }
          }
        }
      },
      "20181209": {
        "description": "Having problems getting static files to work with Django and nginx for some reason.",
        "children": {
          "problem with root": {
            "description": "Basically, nginx will append the url segment to the root, but not to an alias. Alias is the correct directive to use in this case.",
            "children": {
              "url": "https://stackoverflow.com/questions/10631933/nginx-static-file-serving-confusion-with-root-alias"
            }
          }
        }
      },
      "20190215": {
        "description": "Slightly update deployment process",
        "children": {
          "ubuntu": "This process is currently only for the Ubuntu AMI",
          "nginx": {
            "description": "Update server name",
            "children": {
              "server name": "35.178.162.251",
            }
          },
          "postgres": {
            "description": "",
            "children": {
              "install": "sudo apt install postgresql postgresql-contrib",
              "test": "sudo -u postgres psql",
              "create superuser 'db'": "sudo -u postgres createuser --interactive",
              "enter shell and create transactino user": "create user transactino with password '7737d16e80d744b984b17c1918b81cee';",
              "set encoding": "alter role transactino set client_encoding TO 'utf8';",
              "set transaction isolation": "alter role transactino set default_transaction_isolation TO 'read committed';",
              "set timezone": "alter role transactino set timezone TO 'UTC';",
              "grant privileges": "grant all privileges on database db to transactino;",
              "allow test database creation": "alter role transactino createdb;",
              "prevent public connections": "revoke connect on database db from public;",
              "prevent test connections": "revoke connect on database test_db from public;"
            }
          },
          "redis": {
            "description": "set up redis-server as a daemon",
            "children": {
              "install": "sudo apt-get install redis redis-server",
              "already present": "redis appears to be installed and running from when the machine starts. I will test this on an identical instance."
            }
          },
          "gunicorn": {
            "description": "Include instructions for installing python",
            "children": {
              "install python 3.6": "sudo apt-get install python3",
              "install python venv extension": "sudo apt-get install python3-venv",
              "create virtualenv inside wotan": "python3.6 -m venv .",
              "start virtualenv": "source bin/activate",
              "install requirements with pip": "pip install -r requirements/staging.txt",
              "create env.json file": "nano env.json",
              "run tests": "sh scripts/test.sh",
              "run database migrations": "sh scripts/migrate.sh",
              "test server": "gunicorn --bind 0.0.0.0:8000 woot.wsgi",
              "copy configuration (parent dir)": "sudo cp yggdrasil/systemd/gunicorn.service /etc/systemd/system/",
              "start": "sudo systemctl start gunicorn",
              "enable": "sudo systemctl enable gunicorn",
              "status": "sudo systemctl status gunicorn",
              "reread daemon config": "sudo systemctl daemon-reload",
              "restart": "sudo systemctl restart gunicorn"
            }
          }
        }
      },
      "20190217": {
        "description": "Some problems with redis",
        "children": {
          "log messages from gunicorn": "journalctl -u gunicorn",
          "redis": "",
          "workers": "Currently, every worker calls remove_all_jobs when starting. This is not good.",
        }
      },
      "20190218": {
        "description": "Updating deployment process",
        "children": {
          "nginx": {
            "description": "Some updates from the gunicorn deployment instructions",
            "children": {
              "link": "https://docs.gunicorn.org/en/latest/deploy.html",
              "updating nginx file": "done",
              "copy configuration": "sudo cp yggdrasil/nginx/wotan /etc/nginx/sites-available/",
              "test nginx": "sudo nginx -t",
              "default configuration": "Had to remove default sites-enabled config",
              "restart": "sudo systemctl restart nginx"
            }
          },
          "gunicorn": {
            "description": "Moving new config into place",
            "children": {
              "copy configuration": "sudo cp yggdrasil/gunicorn/gunicorn.service /etc/systemd/system/",
              "reread daemon config": "sudo systemctl daemon-reload",
              "start": "sudo systemctl start gunicorn",
            }
          }
        }
      },
      "20190501": {
        "description": "Concentrating on generating docs somehow",
        "children": {
          "mkdocs": "https://www.mkdocs.org/#getting-started",
          "mkdocs is good": "It's good, but I need to be able to place the generated files correctly.",
          "slate is better": "https://github.com/lord/slate/wiki/Deploying-Slate",
          "slate": {
            "description": "Pretty easy to use, and the templating looks powerful enough for what I need.",
            "children": {
              "changes": "For each set of docs, I can share a common set of static files. The only thing that changes is the index template",
              "to build": "Place the index in the source directory, name correctly, and run the build command."
            }
          }
        }
      },
      "20190502": {
        "description": "Continuing to build the static docs with Slate",
        "children": {
          "t12.12": {
            "description": "Templates",
            "children": {
              "add middleman hot reload": "https://github.com/middleman/middleman-livereload"
            }
          }
        }
      },
      "20190514": {
        "description": "Trying to finish docs",
        "children": {
          "ip methods for jormungand": "",
          "payment get should allow id": "copy challenge get"
        }
      },
      "20190626": {
        "description": "Updating deployment again",
        "children": {
          "starting dir": "/home/ubuntu/asgard"
          "update apt-get": "sudo apt-get update",
          "redis": {
            "description": "Redis configuration",
            "children": {
              "install": "sudo apt install redis-server",
              "start": "redis-server",
              "check ports for redis": "sudo lsof -i -P -n | grep LISTEN"
            }
          },
          "nginx": {
            "description": "nginx configuration",
            "children": {
              "install": "sudo apt-get install nginx",
              "update config": "change thor to asgard",
              "update server_name": "IP address from AWS",
              "copy configuration": "sudo cp yggdrasil/nginx/wotan /etc/nginx/sites-available/",
              "link": "sudo ln -s /etc/nginx/sites-available/wotan /etc/nginx/sites-enabled",
              "remove default config": "sudo rm /etc/nginx/sites-available/default",
              "remove default link": "sudo rm /etc/nginx/sites-enabled/default",
              "test nginx": "sudo nginx -t",
              "restart nginx": "sudo systemctl restart nginx",
              "check status": "sudo systemctl status nginx"
            }
          },
          "postgres": {
            "description": "postgres configuration",
            "children": {
              "install": "sudo apt install postgresql postgresql-contrib",
              "test": "sudo -u postgres psql",
              "create superuser 'db'": "sudo -u postgres createuser --interactive",
              "enter shell and create transactino user": "create user transactino with password '7737d16e80d744b984b17c1918b81cee';",
              "set encoding": "alter role transactino set client_encoding TO 'utf8';",
              "set transaction isolation": "alter role transactino set default_transaction_isolation TO 'read committed';",
              "set timezone": "alter role transactino set timezone TO 'UTC';",
              "create database": "create database db;",
              "create test database": "create database test_db;",
              "grant privileges": "grant all privileges on database db to transactino;",
              "allow test database creation": "alter role transactino createdb;",
              "prevent public connections": "revoke connect on database db from public;",
              "prevent test connections": "revoke connect on database test_db from public;"
            }
          },
          "gunicorn": {
            "description": "gunicorn configuration",
            "children": {
              "install python": "sudo apt-get install python3",
              "install venv": "sudo apt-get install python3-venv",
              "change to wotan": "cd wotan/",
              "create virtualenv": "python3.6 -m venv .",
              "activate virtualenv": "source bin/activate",
              "create env.json": "nano env.json",
              "get gpg path": "/usr/bin/gpg",
              "install dependencies": "pip install -r requirements/staging.txt",
              "run tests": "sh scripts/test.sh",
              "run database migrations": "sh scripts/migrate.sh",
              "collectstatic": "sh scripts/collectstatic.sh",
              "add aws host to ALLOWED_HOSTS": "18.130.90.221",
              "test server": "gunicorn --bind 0.0.0.0:8000 woot.wsgi",
              "copy configuration (parent dir)": "sudo cp yggdrasil/gunicorn/gunicorn.service /etc/systemd/system/",
              "start": "sudo systemctl start gunicorn",
              "enable": "sudo systemctl enable gunicorn",
              "status": "sudo systemctl status gunicorn",
              "reread daemon config": "sudo systemctl daemon-reload",
              "restart": "sudo systemctl restart gunicorn",
              "log messages from gunicorn": "journalctl -u gunicorn",
            }
          },
          "matching host": "host in nginx/wotan and django settings must match: 18.130.90.221. Also must use this in browser to get through nginx."
        }
      }
    }
  }
}
